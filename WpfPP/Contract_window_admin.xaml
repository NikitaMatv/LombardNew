<Window x:Class="WpfPP.Contract_window_admin"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WpfPP"
        
        mc:Ignorable="d"
        ResizeMode="CanMinimize"
        WindowStyle="None"  
        WindowStartupLocation="CenterScreen"
        Title="Contract_window" Height="500" Width="1200">

    <Window.Resources>

        <!--#region Button Visual Style-->
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <!--#endregion-->

        <!--#region Home Button Style-->
        <Style x:Key="HomeBtnStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#3A6180"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#3A6180"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#3A6180"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#3A6180"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--#endregion-->

        <!--#region Profile Button Style-->
        <Style x:Key="ProfileBtnStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#3A6180"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#3A6180"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#3A6180"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#3A6180"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--#endregion-->

        <!--#region Settings Button Style-->
        <Style x:Key="SettingsBtnStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#3A6180"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#3A6180"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#3A6180"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#3A6180"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--#endregion-->

        <!--#region Close Button Style-->
        <Style x:Key="CloseBtnStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="Transparent"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="Transparent"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="Transparent"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="Transparent"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--#endregion-->

        <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="20" />
                </Grid.ColumnDefinitions>
                <Border
                  x:Name="Border" 
                  Grid.ColumnSpan="2"
                  CornerRadius="0"
                  Background="#FF161616"
                  
                  BorderThickness="1" />
                <Border 
                  Grid.Column="0"
                  CornerRadius="0" 
                  Margin="1" 
                  Background="#FF161616" 
                  BorderBrush="White"
                  BorderThickness="0,0,1,0" />
                <Path 
                  x:Name="Arrow"
                  Grid.Column="1"     
                  Fill="White"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
                />
            </Grid>
        </ControlTemplate>

        <ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
            <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
        </ControlTemplate>

        <Style x:Key="{x:Type ComboBox}" TargetType="{x:Type ComboBox}">
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="MinWidth" Value="120"/>
            <Setter Property="MinHeight" Value="20"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBox}">
                        <Grid>
                            <ToggleButton 
                            Name="ToggleButton" 
                            Template="{StaticResource ComboBoxToggleButton}" 
                            Grid.Column="2" 
                            Focusable="false"
                            IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                            ClickMode="Press">
                            </ToggleButton>
                            <ContentPresenter Name="ContentSite" IsHitTestVisible="False"  Content="{TemplateBinding SelectionBoxItem}"
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                            Margin="3,3,23,3"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Left" />
                            <TextBox x:Name="PART_EditableTextBox"
                            Style="{x:Null}" 
                            Template="{StaticResource ComboBoxTextBox}" 
                            HorizontalAlignment="Left" 
                            VerticalAlignment="Center" 
                            Margin="3,3,23,3"
                            Focusable="True" 
                            Background="#FF161616"
                            Foreground="Green"
                            Visibility="Hidden"
                            IsReadOnly="{TemplateBinding IsReadOnly}"/>
                            <Popup 
                            Name="Popup"
                            Placement="Bottom"
                            IsOpen="{TemplateBinding IsDropDownOpen}"
                            AllowsTransparency="True" 
                            Focusable="False"
                            PopupAnimation="Slide">

                                <Grid Name="DropDown"
                              SnapsToDevicePixels="True"                
                              MinWidth="{TemplateBinding ActualWidth}"
                              MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border 
                                x:Name="DropDownBorder"
                                Background="#FF161616"

                                BorderThickness="1"
                                BorderBrush="{x:Null}"/>
                                    <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasItems" Value="false">
                                <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="#FF161616"/>
                            </Trigger>
                            <Trigger Property="IsGrouping" Value="true">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                            </Trigger>
                            <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                                <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="0"/>
                                <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0"/>
                            </Trigger>
                            <Trigger Property="IsEditable"  Value="true">
                                <Setter Property="IsTabStop" Value="false"/>
                                <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
            </Style.Triggers>
        </Style>

        <!-- SimpleStyles: ComboBoxItem -->
        <Style x:Key="{x:Type ComboBoxItem}" TargetType="{x:Type ComboBoxItem}">
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                        <Border Name="Border"
                              Padding="2"
                              SnapsToDevicePixels="true">
                            <ContentPresenter />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsHighlighted" Value="true">
                                <Setter TargetName="Border" Property="Background" Value="#FF4F4F4F"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="#888888"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

    <Grid Background="#0B0B0B">

        <Label Content="List of contracts" Margin="74,26,655,425" FontFamily="Inter" FontSize="30" FontWeight="SemiBold" Foreground="White" VerticalContentAlignment="Center"/>
        <Label Content="All contracts" Margin="74,80,655,376" FontFamily="Inter" FontSize="26" FontWeight="Normal"  Foreground="White" VerticalContentAlignment="Center"/>

        <Button x:Name="Add_product" Content="Add a contracts" Margin="1005,40,45,423"  FontFamily="Inter" FontSize="16" FontWeight="SemiBold"  Foreground="White" Background="#04B801" BorderBrush="{x:Null}" Click="Add_product_Click">
            <Button.Resources>
                <Style TargetType="Border">
                    <Setter Property="CornerRadius" Value="16"/>
                </Style>
            </Button.Resources>
        </Button>

        <TextBox HorizontalAlignment="Left" Margin="74,134,0,0" x:Name="Text_Searc" FontSize="16" FontFamily="Inter" Foreground="#323232" TextWrapping="Wrap" VerticalContentAlignment="Center" Text="  Search a product" VerticalAlignment="Top" Width="456" Height="28" Background="#FF161616" BorderBrush="{x:Null}" >
            <TextBox.Resources>
                <Style TargetType="{x:Type Border}">
                    <Setter Property="CornerRadius" Value="8"/>
                </Style>
            </TextBox.Resources>
        </TextBox>

        <Image Source="/img/Lupa.png" HorizontalAlignment="Left" Height="20" Margin="502,138,0,0" VerticalAlignment="Top" Width="21"/>

        <TextBox x:Name="poisk" HorizontalAlignment="Left" Margin="74,134,0,0" TextWrapping="Wrap" FontSize="16" FontFamily="Inter" VerticalContentAlignment="Center" Foreground="White" VerticalAlignment="Top" Width="456" Height="28" BorderBrush="{x:Null}" Background="{x:Null}" TextChanged="TextBox_TextChanged" >
            <TextBox.Resources>
                <Style TargetType="{x:Type Border}">
                    <Setter Property="CornerRadius" Value="8"/>
                </Style>
            </TextBox.Resources>
        </TextBox>


        <ListBox x:Name="main_list" x:FieldModifier="public" Foreground="White" FontFamily="Inter" FontSize="28" HorizontalAlignment="Left" Height="292" VerticalAlignment="Top" 
                 Width="520" d:ItemsSource="{d:SampleData ItemCount=4}"
                 ScrollViewer.HorizontalScrollBarVisibility="Hidden" ScrollViewer.VerticalScrollBarVisibility="Hidden" BorderBrush="{x:Null}" Background="{x:Null}" Margin="55,208,0,0" SelectionChanged="main_list_SelectionChanged">

            <ListBox.ItemTemplate>
                <DataTemplate>
                    <StackPanel Orientation="Horizontal" Width="460">

                        <TextBlock FontSize="12" Text="Date of conclusion" FontWeight="Light" Width="100"/>
                        <TextBlock Margin="-150,20,0,0" FontSize="12" FontWeight="Light" Text="Expiration date" Height="16" Width="51"/>
                        <Border Background="#FF0B0B0B" Width="1"/>
                        <TextBlock Margin="6,0,0,0" FontSize="16" FontStyle="Italic" Text="{Binding date_dogovor, StringFormat={}{0:dd MMMM yy}}" FontFamily="Arial Black" FontWeight="SemiBold" Width="239" RenderTransformOrigin="0.5,0.5"/>
                        <TextBlock Margin="-303,20,0,0" FontSize="12" FontWeight="Light" Text="{Binding date_srokzaloga, StringFormat={}{0:dd MMMM yy}}" Height="16" Width="176"/>


                        <TextBlock Padding="11,3,0,0" FontSize="16" FontWeight="Light" Text="%" Height="36" Width="30"/>
                        <TextBlock Margin="-27,21,0,0" FontSize="10" FontWeight="Light" Text="№" Height="12" Width="13"/>
                        <Border Background="#FF0B0B0B" Width="1" Margin="0,0,3,0"/>
                        <TextBlock Padding="0,0,0,0" FontStyle="Italic" FontSize="16" Text="{Binding procent}" Height="34" Width="86" FontFamily="Arial Black" FontWeight="SemiBold"/>

                        <TextBlock Margin="-86,20,0,0" FontSize="12" FontWeight="Light" Text="{Binding Id_Dogovor}" Height="16" Width="86"/>

                    </StackPanel>
                </DataTemplate>
            </ListBox.ItemTemplate>

            <ListBox.ItemContainerStyle>
                <Style TargetType="{x:Type ListBoxItem}">

                    <Setter Property="Background" Value="#FF161616"/>
                    <Setter Property="Margin" Value="18,10,20,0"/>
                    <Setter Property="Padding" Value="20"/>
                    <Setter Property="Height" Value="80"/>
                    <Setter Property="Width" Value="493"/>
                    <Setter Property="HorizontalAlignment" Value="Left"/>

                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Foreground" Value="#FF1D1E23"/>
                            <Setter Property="BorderThickness" Value="2"/>
                            <Setter Property="BorderBrush" Value="White"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </ListBox.ItemContainerStyle>

        </ListBox>


        <Button Content="x" FontWeight="Medium" VerticalContentAlignment="Stretch" HorizontalContentAlignment="Left" FontFamily="Inter" FontSize="30" HorizontalAlignment="Left" Margin="1170,-3,0,0" VerticalAlignment="Top" Background="{x:Null}" BorderBrush="{x:Null}" Foreground="White" Height="37" Width="20" Click="Button_Exit"/>

        <Label x:Name="Title" Content="Title" Margin="600,84,351,380" FontFamily="Inter" FontSize="26" FontWeight="Normal"  Foreground="White" VerticalContentAlignment="Center"/>
        <Border BorderBrush="#FF161616" Width="2" BorderThickness="1" Margin="585,140,613,2"/>

        <Border x:Name="border_title" Visibility="Hidden" BorderThickness="1" HorizontalAlignment="Left" Height="4" Margin="92,195,0,0" VerticalAlignment="Top" Width="118" Background="#04B700"/>
        <Border x:Name="border_price" Visibility="Hidden" BorderThickness="1" HorizontalAlignment="Left" Height="4" Margin="235,195,0,0" VerticalAlignment="Top" Width="98" Background="#04B700"/>


        <Button x:Name="save_product" Content="Save" Margin="598,438,494,32"  FontFamily="Inter" FontSize="16" FontWeight="SemiBold"  Foreground="White" Background="#04B801" BorderBrush="{x:Null}" Click="save_product_Click">
            <Button.Resources>
                <Style TargetType="{x:Type Border}">
                    <Setter Property="CornerRadius" Value="10"/>
                </Style>
            </Button.Resources>
        </Button>
        <Button x:Name="deelte_product" Content="Delete" Margin="714,438,378,32"  FontFamily="Inter" FontSize="16" FontWeight="SemiBold"  Foreground="White" Background="#04B801" BorderBrush="{x:Null}" Click="deelte_product_Click">
            <Button.Resources>
                <Style TargetType="{x:Type Border}">
                    <Setter Property="CornerRadius" Value="10"/>
                </Style>
            </Button.Resources>
        </Button>
        <Button x:Name="clear_product" Content="Clear"  Margin="830,438,262,32"  FontFamily="Inter" FontSize="16" FontWeight="SemiBold"  Foreground="White" Background="#04B801" BorderBrush="{x:Null}" Click="clear_product_Click">
            <Button.Resources>
                <Style TargetType="{x:Type Border}">
                    <Setter Property="CornerRadius" Value="10"/>
                </Style>
            </Button.Resources>
        </Button>




        <Button x:Name="conclusion_product" Content="Date of conclusion"  Margin="77,171,975,297"  FontFamily="Inter" FontSize="14" FontWeight="Normal"  Foreground="White" Background="{x:Null}" BorderBrush="{x:Null}" Click="title_product_Click"/>
        <Button x:Name="expiration_product" Content="Expiration date"  Margin="215,171,848,297"  FontFamily="Inter" FontSize="14" FontWeight="Normal"  Foreground="White" Background="{x:Null}" BorderBrush="{x:Null}" Click="price_product_Click"/>


        <Grid Margin="0,0,898,0">

            <!--create a new grid-->
            <Grid Margin="0,0,17,0">

                <!--add a shadow effect-->


                <!--add a stack panel to the left of the grid-->
                <StackPanel Width="55"
                        HorizontalAlignment="Left"
                        Background="#FF161616">

                    <!--add 3 buttons - Home, Profile and Settings-->

                    <Button x:Name="Home"
                        Height="55"
                        Background="Transparent"
                        BorderBrush="Transparent"
                        Margin="0,30,0,10" Style="{DynamicResource HomeBtnStyle}" MouseEnter="Home_MouseEnter" MouseLeave="Home_MouseLeave" Click="Home_Click">

                        <!--add image-->
                        <Image Source="/img/Home.png"
                               Width="35"
                               Height="35">
                        </Image>

                    </Button>

                    <Button x:Name="Profile"
                        Height="55"
                        Background="Transparent"
                        BorderBrush="Transparent"
                        Margin="0,0,0,0" Style="{DynamicResource HomeBtnStyle}" MouseEnter="Сontract_MouseEnter" MouseLeave="Сontract_MouseLeave" Click="Сontract_Click">

                        <!--add image-->
                        <Image Source="/img/Dogovor_color.png"
                               Width="35"
                               Height="35">
                        </Image>

                    </Button>

                    <Button x:Name="Settings"
                        Height="55"
                        Background="Transparent"
                        BorderBrush="Transparent"
                        Margin="0,10,0,0" Style="{DynamicResource HomeBtnStyle}" MouseEnter="Settings_MouseEnter" MouseLeave="Settings_MouseLeave" Click="Settings_Click">

                        <!--add image-->
                        <Image Source="/img/user.png"
                               Width="35"
                               Height="35">
                        </Image>

                    </Button>

                    <Button x:Name="sotrudnik"
                        Height="55"
                        Background="Transparent"
                        BorderBrush="Transparent"
                        Margin="0,10,0,0" Style="{DynamicResource HomeBtnStyle}" MouseEnter="sotrudnik_MouseEnter"  MouseLeave="sotrudnik_MouseLeave" Click="sotrudnik_Click">

                        <!--add image-->
                        <Image Source="/img/user_plus.png"
                               Width="35"
                               Height="35">
                        </Image>

                    </Button>

                    <Button x:Name="category"
                        Height="55"
                        Background="Transparent"
                        BorderBrush="Transparent"
                        Margin="0,10,0,0" Style="{DynamicResource HomeBtnStyle}" MouseEnter="category_MouseEnter" MouseLeave="category_MouseLeave" Click="category_Click">

                        <!--add image-->
                        <Image Source="/img/Categoory.png"
                               Width="35"
                               Height="35">
                        </Image>

                    </Button>

                    <Button x:Name="users"
                        Height="55"
                        Background="Transparent"
                        BorderBrush="Transparent"
                        Margin="0,10,0,0" Style="{DynamicResource HomeBtnStyle}" MouseEnter="users_MouseEnter" MouseLeave="users_MouseLeave" Click="users_Click">

                        <!--add image-->
                        <Image Source="/img/users.png"
                               Width="35"
                               Height="35">
                        </Image>

                    </Button>

                    <Button x:Name="Exit"
                        Height="55"
                        Background="Transparent"
                        BorderBrush="Transparent"
                        Margin="0,25,0,0" Style="{DynamicResource HomeBtnStyle}" MouseEnter="Exit_MouseEnter" MouseLeave="Exit_MouseLeave" Click="Exit_Click">

                        <!--add image-->
                        <Image Source="/img/exit.png"
                               Width="35"
                               Height="35">
                        </Image>

                    </Button>

                </StackPanel>

                <!--add the popup user control-->
                <Popup x:Name="popup_uc"
                   AllowsTransparency="True"
                   HorizontalOffset="0"
                   VerticalOffset="0">

                    <Grid>
                        <local:PopupUserControl x:Name="Header" Foreground="#E0FFFF"/>
                    </Grid>
                </Popup>

            </Grid>
        </Grid>
        <Label Content="Date of conclusion" Margin="598,0,0,281" FontFamily="Inter" FontSize="14" FontWeight="Normal"  Foreground="White" VerticalContentAlignment="Center" Height="24" VerticalAlignment="Bottom" HorizontalAlignment="Left" Width="140"/>
        <Label Content="Expiration date" Margin="598,266,0,0" FontFamily="Inter" FontSize="14" FontWeight="Normal"  Foreground="White" VerticalContentAlignment="Center" Height="24" VerticalAlignment="Top" HorizontalAlignment="Left" Width="140"/>
        <TextBox PreviewTextInput="text_Percent_PreviewTextInput"  x:Name="text_Percent" HorizontalAlignment="Left" Margin="598,365,0,0" TextWrapping="Wrap" FontSize="16" FontFamily="Inter" VerticalContentAlignment="Center" Foreground="White" VerticalAlignment="Top" Width="277" Height="32" BorderBrush="{x:Null}"  Background="#FF161616" TextChanged="TextBox_TextChanged" >
            <TextBox.Resources>
                <Style TargetType="{x:Type Border}">
                    <Setter Property="CornerRadius" Value="8"/>
                </Style>
            </TextBox.Resources>
        </TextBox>
        <Label Content="Percent" Margin="598,0,0,138" FontFamily="Inter" FontSize="14" FontWeight="Normal"  Foreground="White" VerticalContentAlignment="Center" Height="24" VerticalAlignment="Bottom" HorizontalAlignment="Left" Width="140"/>
        <ComboBox x:Name="Combo_Client" Width="250" Margin="925,222,25,246" />
        <ComboBox x:Name="Combo_Employee" Width="250" Margin="925,293,25,175"/>
        <Label Content="Client" Margin="925,0,0,283" FontFamily="Inter" FontSize="14" FontWeight="Normal"  Foreground="White" VerticalContentAlignment="Center" Height="24" VerticalAlignment="Bottom" HorizontalAlignment="Left" Width="140"/>
        <Label Content="Employee" Margin="925,0,0,207" FontFamily="Inter" FontSize="14" FontWeight="Normal"  Foreground="White" VerticalContentAlignment="Center" Height="28" VerticalAlignment="Bottom" HorizontalAlignment="Left" Width="140"/>
        <DatePicker x:Name="text_date_dogovor" VerticalContentAlignment="Center" VerticalAlignment="Top" HorizontalAlignment="Left" FontSize="14" Background="#FF161616" Foreground="White" DisplayDate="2022-10-12" Margin="600,222,0,0" Width="275">
            <DatePicker.Resources>
                <Style x:Key="CustomCalendarDayButton"
                       TargetType="CalendarDayButton"
                       BasedOn="{StaticResource MaterialDesignCalendarDayButton}">
                </Style>
                <Style x:Key="CustomCalendarButton"
                       TargetType="CalendarButton"
                       BasedOn="{StaticResource MaterialDesignCalendarButton}">
                </Style>
                <Style x:Key="CustomCalendar"
                       TargetType="{x:Type Calendar}"
                       BasedOn="{StaticResource MaterialDesignDatePickerCalendarPortrait}">
                    <Setter Property="Background" Value="#FF161616" />
                    <Setter Property="CalendarButtonStyle" Value="{StaticResource CustomCalendarButton}" />
                    <Setter Property="CalendarDayButtonStyle" Value="{StaticResource CustomCalendarDayButton}" />
                    <Setter Property="Foreground" Value="White" />
                </Style>
                <Style TargetType="DatePicker" BasedOn="{StaticResource MaterialDesignFloatingHintDatePicker}" >
                    <Setter Property="CalendarStyle" Value="{StaticResource CustomCalendar}" />
                </Style>
            </DatePicker.Resources>
        </DatePicker>
        <DatePicker x:Name="text_date_srokzaloga" VerticalContentAlignment="Center" HorizontalAlignment="Left" Margin="598,295,0,0" VerticalAlignment="Top" Width="277" FontSize="14" Background="#FF161616" Foreground="White" DisplayDate="2022-10-12">
            <DatePicker.Resources>
                <Style x:Key="CustomCalendarDayButton"
                       TargetType="CalendarDayButton"
                       BasedOn="{StaticResource MaterialDesignCalendarDayButton}">

                </Style>
                <Style x:Key="CustomCalendarButton"
                       TargetType="CalendarButton"
                       BasedOn="{StaticResource MaterialDesignCalendarButton}">

                </Style>
                <Style x:Key="CustomCalendar"
                       TargetType="{x:Type Calendar}"
                       BasedOn="{StaticResource MaterialDesignDatePickerCalendarPortrait}">
                    <Setter Property="Background" Value="#FF161616" />
                    <Setter Property="CalendarButtonStyle" Value="{StaticResource CustomCalendarButton}" />
                    <Setter Property="CalendarDayButtonStyle" Value="{StaticResource CustomCalendarDayButton}" />
                    <Setter Property="Foreground" Value="White" />

                </Style>
                <Style TargetType="DatePicker" BasedOn="{StaticResource MaterialDesignFloatingHintDatePicker}">
                    <Setter Property="CalendarStyle" Value="{StaticResource CustomCalendar}" />
                </Style>
            </DatePicker.Resources>
        </DatePicker>

        <TextBlock HorizontalAlignment="Right" Background="{x:Null}" Margin="0,480,10,0" FontFamily="Inter" FontSize="8" Foreground="White" TextWrapping="Wrap" Text="Admin" VerticalAlignment="Top" Width="25" Height="10"/>
        <Ellipse HorizontalAlignment="Left" Height="8" Margin="1152,481,0,0" Stroke="Red" VerticalAlignment="Top" Width="8" Fill="Red"/>

    </Grid>
</Window>
